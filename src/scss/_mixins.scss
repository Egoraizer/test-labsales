@mixin font-face($font-family, $font-weight, $font-style, $url, $localName1, $localName2) {
	@font-face {
		font-family: $font-family;
		src: url($url + '.eot');
		src: local($localName1), local($localName2),
				url($url + '.eot?#iefix') format('embedded-opentype'),
				url($url + '.woff2') format('woff2'),
				url($url + '.woff') format('woff'),
				url($url + '.ttf') format('truetype');
		font-weight: #{$font-weight};
		font-style: #{$font-style};
	}
}

@mixin font($family: $primary-font, $size: 1em, $line-height: 1em, $weight: normal, $color: inherit, $style: normal) {
  font-family: $family, sans-serif;
  color: $color;
  font-size: $size;
  line-height: $line-height;
  font-weight: $weight;
  font-style: $style;
}

@mixin mediaMaxW($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    @media (max-width: $breakpoint-value) {
      @content;
    }
  } @else { @warn 'Invalid breakpoint: #{$breakpoint}.'; }
}

@mixin onHover() {
	&:hover {
		@content;
	}
}

@function font-calc($maxSize, $minSize, $minViewPort: $min-width-container, $maxViewPort: $max-width-container) {
		@return calc(#{$minSize}px + (#{$maxSize} - #{$minSize}) * ((100vw - #{$minViewPort}px) / (#{$maxViewPort} - #{$minViewPort})));
}